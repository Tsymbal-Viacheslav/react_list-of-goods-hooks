{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","listIsVisible","setListVisibility","sortType","setSortType","isReversed","setReverse","list","sort","good1","good2","localeCompare","length","reverse","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"oMAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAA2CC,oBAAS,GAApD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAiCJ,oBAAS,GAA1C,mBAAOK,EAAP,KAAmBC,EAAnB,KAWMC,EAAI,UAAOT,GAEjB,OAAQK,GACN,IAAK,WACHI,EAAKC,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAChD,MAEF,IAAK,SACHH,EAAKC,MAAK,SAACC,EAAOC,GAAR,OAAkBA,EAAME,OAASH,EAAMG,UAWrD,OAJmB,IAAfP,GACFE,EAAKM,UAIL,qBAAKC,UAAU,MAAf,UACqB,IAAlBb,EAEG,wBACEa,UAAU,aACVC,KAAK,SACLC,QAAS,kBAAMd,GAAkB,IAHnC,mBASA,sBAAKY,UAAU,iBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,wBACEA,UAAU,wBACVC,KAAK,SACLC,QAAS,kBA9CUZ,EAAY,aA2CjC,iCAQA,wBACEU,UAAU,wBACVC,KAAK,SACLC,QAAS,kBApDIZ,EAAY,WAiD3B,4BAQA,wBACEU,UAAU,wBACVC,KAAK,SACLC,QAAS,kBAAMV,GAAYD,IAH7B,qBAQA,wBACES,UAAU,wBACVC,KAAK,SACLC,QAAS,kBAjErBZ,EAAY,SACZE,GAAW,IA6DD,sBASF,oBAAIQ,UAAU,aAAd,SACGP,EAAKU,KAAI,SAAAC,GAAI,OACZ,oBACEJ,UAAU,YADZ,SAIGI,GAFIA,cClGvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.b1b6c7ff.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [listIsVisible, setListVisibility] = useState(false);\n  const [sortType, setSortType] = useState('');\n  const [isReversed, setReverse] = useState(false);\n\n  const sortAlphabetically = () => setSortType('alphabet');\n\n  const sortByLength = () => setSortType('length');\n\n  const reset = () => {\n    setSortType('');\n    setReverse(false);\n  };\n\n  const list = [...goodsFromServer];\n\n  switch (sortType) {\n    case 'alphabet':\n      list.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n\n    case 'length':\n      list.sort((good1, good2) => good2.length - good1.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed === true) {\n    list.reverse();\n  }\n\n  return (\n    <div className=\"App\">\n      {listIsVisible === false\n        ? (\n          <button\n            className=\"App__start\"\n            type=\"button\"\n            onClick={() => setListVisibility(true)}\n          >\n            Start\n          </button>\n        )\n        : (\n          <div className=\"App__container\">\n            <div className=\"App__container-buttons\">\n              <button\n                className=\"App__container-button\"\n                type=\"button\"\n                onClick={() => sortAlphabetically()}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                className=\"App__container-button\"\n                type=\"button\"\n                onClick={() => sortByLength()}\n              >\n                Sort by length\n              </button>\n\n              <button\n                className=\"App__container-button\"\n                type=\"button\"\n                onClick={() => setReverse(!isReversed)}\n              >\n                Reverse\n              </button>\n\n              <button\n                className=\"App__container-button\"\n                type=\"button\"\n                onClick={() => reset()}\n              >\n                Reset\n              </button>\n            </div>\n\n            <ul className=\"App__goods\">\n              {list.map(good => (\n                <li\n                  className=\"App__good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}